#include <behaviors/mouse_keys.dtsi>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/mouse.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/rgb.h>

#define ZMK_MOUSE_DEFAULT_MOVE_VAL 1200  // 600
#define ZMK_MOUSE_DEFAULT_SCRL_VAL 20    // 10
#define U_MS_U &mmv MOVE_UP
#define U_MS_D &mmv MOVE_DOWN
#define U_MS_L &mmv MOVE_LEFT
#define U_MS_R &mmv MOVE_RIGHT

// https://zmk.dev/docs/keymaps/behaviors/hold-tap#example-use-cases
#define MO_TOG(layer) &mo_tog layer layer   // Macro to apply momentary-layer-on-hold/toggle-layer-on-tap to a specific layer

/ {
    behaviors {
        td0: td0 {
            compatible = "zmk,behavior-tap-dance";
            label = "TD0";
            #binding-cells = <0>;
            bindings = <&kp LEFT_SHIFT>, <&kp CAPS>;
        };

        mmv {
            acceleration-exponent = <1>;      // 1
            time-to-max-speed-ms = <900>;    // 40
            delay-ms = <0>;                   // 0
        };

        msc {
            acceleration-exponent = <1>;      // 0
            time-to-max-speed-ms = <400>;      // 500
            delay-ms = <0>;                   // 10
        };

        dt_tog: double_tap_tog {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <400>;
            bindings = <&mo 0>, <&tog>;
        };

        mo_tog: behavior_mo_tog {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "hold-preferred";
            tapping-term-ms = <200>;
            bindings = <&mo>, <&dt_tog>;
        };
    };

    rgb_encoder: rgb_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        label = "RGB_ENCODER";
        #sensor-binding-cells = <0>;
        bindings = <&rgb_ug RGB_BRI>, <&rgb_ug RGB_BRD>;
    };

    scroll_encoder: scroll_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;

        tap-ms = <30>;
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            display-name = "QWERTY";

            // |  TAB  |  Q  |  W  |  E  |  R  |  T  |       ↑       |  Y   |  U   |  I  |  O  |  P  |  ENT  |
            // | SHIFT |  A  |  S  |  D  |  F  |  G  |       ↓       |  H   |  J   |  K  |  L  |  ;  |   '   | 
            // | CTRL  |  Z  |  X  |  C  |  V  |  B  |       ←       |  N   |  M   |  ,  |  .  |  /  | SHIFT |
            //                     | GUI | LWR | SPC |       →       | BSPC | RSE  | GUI |
            //                                             LClick

            bindings = <
&kp TAB    &kp Q  &kp W       &kp E     &kp R        &kp T          &mmv MOVE_UP        &kp Y       &kp U        &kp I      &kp O    &kp P     &kp ENTER
&kp LSHFT  &kp A  &kp S       &kp D     &kp F        &kp G          &mmv MOVE_DOWN      &kp H       &kp J        &kp K      &kp L    &kp SEMI  &kp SQT
&kp LCTRL  &kp Z  &kp X       &kp C     &kp V        &kp B          &mmv MOVE_LEFT      &kp N       &kp M        &kp COMMA  &kp DOT  &kp FSLH  &kp RSHFT
                  &kp C_MUTE  &kp LGUI  &mo_tog 1 3  &kp SPACE      &mmv MOVE_RIGHT     &kp BSPC    &mo 2   &mt RGUI LG(GRAVE)
                                                                    &mkp LCLK
            >;

            label = "QWERTY";
            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOLUME_DOWN>;
        };

        lower_layer {
            display-name = "LOWER";

            // |  ESC |  !  |  @  |  #  |  $  |  %  |      PG UP      |  ^  |  &  |  *  |  (  |  )  |  |   |
            // | CAPS |     |     |     |     |     |      PG DN      |  _  |  -  |  +  |  =  |  {  |  }   |
            // |      |     |     |     |     |     |      BACK       |     |     |     |     |     |      |
            //                    |     |     |     |      FORWARD    |     |     | ALT |
            //                                             RClick

            bindings = <
&kp ESC          &kp EXCL   &kp AT      &kp HASH  &kp DLLR  &kp PRCNT     &kp PG_UP     &kp CARET  &kp AMPS   &kp ASTRK  &kp LPAR   &kp RPAR  &kp PIPE
&mt LSHIFT CAPS  &trans     &trans      &trans    &trans    &trans        &kp PG_DN     &kp UNDER  &kp MINUS  &kp PLUS   &kp EQUAL  &kp LBRC  &kp RBRC
&trans           &trans     &trans      &trans    &trans    &trans        &mkp MB4      &trans     &trans     &trans     &trans     &trans    &trans
                            &kp C_MUTE  &trans    &trans    &trans        &mkp MB5      &trans     &trans     &kp RALT
                                                                          &mkp RCLK     
            >;

            label = "LOWER";
            sensor-bindings = <&scroll_encoder>;
        };

        raise_layer {
            display-name = "RAISE";

            // |  `   |  1   |  2   |  3   |  4   |  5   |        ↑        |  6   |  7   |  8   |   9   |  0  |  \  |
            // |  F1  |  F2  |  F3  |  F4  |  F5  |  F6  |        ↓        | Left | Down |  Up  | Right |  [  |  ]  |
            // |  F7  |  F8  |  F9  |  F10 |  F11 |  F12 |        ←        |      |      |      |       |     |     |
            //                      |      |      |      |        →        |      |      |      |
            //                                                 RClick

            bindings = <
&kp GRAVE  &kp N1  &kp N2      &kp N3   &kp N4   &kp N5      &mmv MOVE_UP         &kp N6    &kp N7    &kp N8  &kp N9     &kp N0    &kp BSLH
&kp F1     &kp F2  &kp F3      &kp F4   &kp F5   &kp F6      &mmv MOVE_DOWN       &kp LEFT  &kp DOWN  &kp UP  &kp RIGHT  &kp LBKT  &kp RBKT
&kp F7     &kp F8  &kp F9      &kp F10  &kp F11  &kp F12     &mmv MOVE_LEFT       &trans    &trans    &trans  &trans     &trans    &trans
                   &kp C_MUTE  &trans   &trans   &trans      &mmv MOVE_RIGHT      &trans    &trans    &trans
                                                             &mkp RCLK
            >;

            label = "RAISE";
            sensor-bindings = <&scroll_encoder>;           
        };

        layer_3 {
            display-name = "ADJUST";

            // | BT CLR | BT1 | BT2 | BT3 |     | BT/USB |        ↑        | RGB TOG | HUE+ | SAT+ | BRIGHT+ | SPEED+ |    |
            // |        |     |     |     |     |        |        ↓        | RGB EFF | HUE- | SAT- | BRIGHT- | SPEED- |    |
            // |        |     |     |     |     |        |        ←        | RGB EFR |      |      |         |        |    |
            //                      |     |     |  reset |        →        |  reset  |      |      |
            //                                                 LClick

            bindings = <
&none &bt BT_SEL 0  &bt BT_SEL 1    &bt BT_SEL 2  &trans  &out OUT_TOG      &trans      &rgb_ug RGB_TOG &rgb_ug RGB_HUI &rgb_ug RGB_SAI &rgb_ug RGB_BRI  &rgb_ug RGB_SPI  &trans
&none &bt BT_DISC 0 &bt BT_DISC 1   &bt BT_DISC 2 &none   &none             &trans      &rgb_ug RGB_EFF &rgb_ug RGB_HUD &rgb_ug RGB_SAD &rgb_ug RGB_BRD  &rgb_ug RGB_SPD  &trans
&none &none         &bt BT_CLR_ALL  &bt BT_CLR    &none   &none             &trans      &rgb_ug RGB_EFR &none           &none           &none             &none           &trans
                    &rgb_ug RGB_TOG &trans        &trans  &sys_reset        &trans      &sys_reset      &trans          &trans
                                                                            &trans
            >;

            label = "ADJUST";
            sensor-bindings = <&rgb_encoder>;
        };
    };
};
